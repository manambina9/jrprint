{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content %}
<div class="container"> 
    <span class="animated-background" style="display: block; text-align: center; margin: 40px 0; padding: 40px; border-radius: 20px; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2); color: white; position: relative; overflow: hidden;">
        <div style="position: absolute; top: -50px; right: -50px; background-color: rgba(255, 255, 255, 0.15); width: 140px; height: 140px; border-radius: 50%; z-index: 0;"></div>
        <div style="position: absolute; bottom: -60px; left: -60px; background-color: rgba(255, 255, 255, 0.15); width: 180px; height: 180px; border-radius: 50%; z-index: 0;"></div>
        <div style="position: absolute; top: 30%; left: 50%; transform: translate(-50%, -50%); background: rgba(255, 255, 255, 0.1); width: 200px; height: 200px; border-radius: 50%; z-index: 0;"></div>
     
        <h5 style="font-size: 32px; font-weight: bold; letter-spacing: 2px; margin-bottom: 15px; text-transform: uppercase; position: relative; z-index: 1;">Bienvenue sur votre tableau de bord !</h5>
        <p style="font-size: 20px; font-weight: 300; color: rgba(255, 255, 255, 0.9); margin-bottom: 0; position: relative; z-index: 1;">Gérez vos panneaux publicitaires et suivez vos projets en temps réel.</p>
    </span>
    
    
    <div class="row">
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card text-white bg-primary card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-ad"></i> Panneaux disponibles</h5>
                    <p class="card-text display-4"><span>{{ panneauxDisponibles }}</span></p> 
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card text-white bg-success card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-check-circle"></i> Panneaux loués</h5>
                    <p class="card-text display-4"><span>{{ nombrePanneauLoue }}</span></p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card text-white bg-warning card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-project-diagram"></i> Projets d'habillage</h5>
                    <p class="card-text display-4"><span>{{ nombre_services_autres_que_panneau }}</span></p>  
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card text-white bg-danger card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-dollar-sign"></i> Revenus générés</h5>
                    <p class="card-text display-4">{{ revenue }} Ar</p> 
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-users"></i> Gestion des utilisateurs</h5>
                    <p class="card-text">Ajouter ou modifier des utilisateurs.</p>
                    <a href="{{ path('admin', { 'crudAction': 'index', 'crudControllerFqcn': 'App\\Controller\\Admin\\UserCrudController' }) }}" class="btn btn-primary mt-auto">Voir utilisateurs</a>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-tools"></i> Gestion des panneaux</h5>
                    <p class="card-text">Voir et gérer les panneaux publicitaires.</p>
                    <a href="{{ path('admin', { 'crudAction': 'index', 'crudControllerFqcn': 'App\\Controller\\Admin\\CommandeCrudController' }) }}" class="btn btn-success mt-auto">Voir Commandes</a>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-paint-brush"></i> Projets d'habillage</h5>
                    <p class="card-text">Suivre les projets d'habillage en cours.</p>
                    <a href="{{ path('admin', { 'crudAction': 'index', 'crudControllerFqcn': 'App\\Controller\\Admin\\FactureCrudController' }) }}" class="btn btn-warning mt-auto">Voir Facture</a>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6 mb-4">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-chart-line"></i> Statistiques</h5>
                    <p class="card-text">Voir les statistiques générales.</p>
                    <a href="{{ path('admin', { 'crudAction': 'index', 'crudControllerFqcn': 'App\\Controller\\Admin\\TableauBordController' }) }}" class="btn btn-danger mt-auto">Voir les statistique</a>

                </div>
            </div>
        </div>
    </div>
    <style>
            /* Styles pour le conteneur du sélecteur */
        .custom-select-container {
            margin-bottom: 20px;
        }

        /* Styles pour le label */
        .custom-select-container label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
            color: #333; /* Couleur du texte */
        }

        /* Styles pour le sélecteur */
        .custom-select {
            appearance: none; /* Supprimer le style par défaut du sélecteur */
            -webkit-appearance: none; /* Pour Safari */
            -moz-appearance: none; /* Pour Firefox */
            padding: 10px 20px; /* Espacement à l'intérieur */
            border: 1px solid #ccc; /* Bordure */
            border-radius: 5px; /* Coins arrondis */
            background-color: #fff; /* Couleur de fond */
            color: #333; /* Couleur du texte */
            font-size: 16px; /* Taille de la police */
            cursor: pointer; /* Curseur pointer */
            transition: border-color 0.3s; /* Transition pour la bordure */
        }

        /* Changer la couleur de la bordure au survol */
        .custom-select:hover {
            border-color: #007bff; /* Couleur de la bordure au survol */
        }

        /* Ajouter une flèche personnalisée */
        .custom-select::after {
            content: '▼'; /* Flèche vers le bas */
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none; /* Ignorer les événements de souris */
        }

    </style>
    <div class="row mb-4 custom-select-container">
        <div class="col-lg-6">
            <label for="yearSelect">Sélectionnez une année :</label>
            <select id="yearSelect" class="form-select custom-select" onchange="updateRevenueChart()">
                <option value="2024">2024</option>
                <option value="2025">2025</option>
                <option value="2026">2026</option>
                <option value="2027">2027</option>
                <option value="2028">2028</option>
                <option value="2029">2029</option>
                <option value="2030">2030</option>
                <option value="2031">2031</option>
                <option value="2032">2032</option>
                <option value="2033">2033</option>
                <option value="2034">2034</option>
                <option value="2035">2035</option>
                <!-- Ajoutez d'autres années si nécessaire -->
            </select>
        </div>
    </div>
    
        

    <div class="row"> 
        <div class="col-lg-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Revenus par mois</h5>
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div> 
        <div class="col-lg-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Utilisateurs par mois</h5>
                    <canvas id="userPanelChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    

    <div class="row mb-4">
        <div class="col-lg-6">
            <h5 class="card-title">Commande passée par mois</h5>
            <canvas id="panelRentalsChart"></canvas>
        </div>
    </div>

    <div class="afaire">
        <h1> A faire</h1>
        <p>Affiche la graphe pour tout les services du mois </p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script> 
        // Récupération des données
        var usersData = JSON.parse('{{ usersByMonth|json_encode|raw }}') || [];
        var RevenuData = JSON.parse('{{revenueByMonth|json_encode|raw}}') || [];
        var panelRentalsData = JSON.parse('{{ panneauxLouesByMonth|json_encode|raw }}') || [];
        var selectedYear = 2024;

        // Labels pour les mois
        var labels = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];
     
        // Initialisation des données pour les utilisateurs et revenus
        var userCounts = Array(12).fill(0);
        var revenuCounts = Array(12).fill(0);
        var panelRentalsCounts = Array(12).fill(0);

        // Remplissage des données utilisateurs
        usersData.forEach(function(item) {
            userCounts[item.month - 1] = item.count;  
        });

        RevenuData.forEach(function(item) {
            revenuCounts[item.month - 1] = item.total;
        });

        panelRentalsData.forEach(function(item) {
            panelRentalsCounts[item.month - 1] = item.count;  
        });

        if (window.revenueChart) {
            window.revenueChart.destroy();
        }

        function updateRevenueChart() {
            selectedYear = parseInt(document.getElementById('yearSelect').value);
        
            // Récupérer les données pour l'année sélectionnée
            var filteredRevenueData = RevenuData.filter(function(item) {
                return item.year === selectedYear; // Supposons que `item.year` contienne l'année
            });
        
            // Remplissage des données de revenus
            revenuCounts.fill(0); // Réinitialiser les données
            filteredRevenueData.forEach(function(item) {
                revenuCounts[item.month - 1] = item.total;
            });
        
            // Mettre à jour le graphique
            revenueChart.data.datasets[0].data = revenuCounts;
            revenueChart.update();
        }

        // Graphique des utilisateurs par mois
        var ctxUserPanel = document.getElementById('userPanelChart').getContext('2d');
        var userPanelChart = new Chart(ctxUserPanel, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Utilisateurs inscrits',
                data: userCounts,
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 2,
                fill: true
            }]
        },
        options: {
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Mois'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Nombre d\'utilisateurs'
                    },
                    beginAtZero: true,
                    ticks: {
                        stepSize: 10,
                        max: 50
                    }
                }
            }
        }
    });

    // Graphique des revenus par mois
    var ctxRevenuPanel = document.getElementById('revenueChart').getContext('2d');
    var revenueChart = new Chart(ctxRevenuPanel, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Revenus par mois  en Ariary',
                data: revenuCounts,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: true
            }]
        },
        options: {
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Mois'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Revenus par mois'
                    },
                    beginAtZero: true,
                    ticks: {
                        stepSize: 10,
                        max: 50
                    }
                }
            }
        }
    });


    var ctxPanelRentals = document.getElementById('panelRentalsChart').getContext('2d');
    Chart.defaults.backgroundColor = '#9BD0F5';

    var panelRentalsChart = new Chart(ctxPanelRentals, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Panneaux loués',
                data: panelRentalsCounts,
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 2,
                borderRadius: 5, // Coins arrondis pour les barres
                hoverBackgroundColor: 'rgba(54, 162, 235, 0.8)',
                hoverBorderColor: 'rgba(54, 162, 235, 1.2)',
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        font: {
                            size: 14,
                            weight: 'bold'
                        },
                        color: '#333' // Couleur des labels de la légende
                    }
                },
                title: {
                    display: true,
                    font: {
                        size: 20,
                        weight: 'bold'
                    },
                    color: '#111', // Couleur du titre
                    padding: {
                        top: 10,
                        bottom: 30
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(0,0,0,0.7)',
                    titleColor: '#fff',
                    bodyColor: '#fff',
                    borderColor: '#54a6eb',
                    borderWidth: 1,
                    padding: 10
                }
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Mois',
                        color: '#444',
                        font: {
                            size: 14,
                            style: 'italic'
                        }
                    },
                    grid: {
                        color: 'rgba(200, 200, 200, 0.2)', // Couleur de la grille sur l'axe x
                        borderColor: '#ccc',
                        borderWidth: 1
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Nombre de panneaux loués',
                        color: '#444',
                        font: {
                            size: 14,
                            style: 'italic'
                        }
                    },
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1,
                        color: '#333' // Couleur des labels sur l'axe y
                    },
                    grid: {
                        color: 'rgba(200, 200, 200, 0.2)', // Couleur de la grille sur l'axe y
                        borderColor: '#ccc',
                        borderWidth: 1
                    }
                }
            }
        }
});

        document.addEventListener('DOMContentLoaded', function() {
            const categorieField = document.querySelector('#prestation_categorie');
            const titreField = document.querySelector('#prestation_titre');

            const optionsPanneau = {
                'Panneau sucette (Format 2*1)': 'Panneau sucette (Format 2*1)',
                'Panneau (Format 4x3)': 'Panneau (Format 4x3)',
                'Panneau (Format 8x3)': 'Panneau (Format 8x3)',
                'Panneau (Format 12x3)': 'Panneau (Format 12x3)',
                'Panneau (Format 9x3)': 'Panneau (Format 9x3)',
                'Panneau (Format 6x3)': 'Panneau (Format 6x3)',
            };

            const optionsAutresServices = {
                'Habillages cuves & Transtack': 'Habillages cuves & Transtack',
                'Décorations évènementielles': 'Décorations évènementielles',
                'Silhouettes': 'Silhouettes',
                'Habillage véhicules': 'Habillage véhicules',
                'Décorations Plaque sur PVC': 'Décorations Plaque sur PVC',
                'Photobooth': 'Photobooth',
                'Habillages vitrines / Vitrophanie': 'Habillages vitrines / Vitrophanie',
                'Branding 3': 'Branding 3',
                'Photocall': 'Photocall',
                'Habillages comptoirs': 'Habillages comptoirs',
                'Totem': 'Totem',
                'Bâche tendue': 'Bâche tendue',
                'Stop trottoir': 'Stop trottoir',
                'Habillages boutiques': 'Habillages boutiques'
            };

            categorieField.addEventListener('change', function() {
                const selectedCategorie = categorieField.value;

                // Clear existing options in titreField
                titreField.innerHTML = '<option value="">Sélectionnez un titre</option>';

                // Populate the titreField based on the selected category
                const options = selectedCategorie === 'Panneau' ? optionsPanneau : optionsAutresServices;
                
                for (const [value, label] of Object.entries(options)) {
                    const option = document.createElement('option');
                    option.value = value;
                    option.textContent = label;
                    titreField.appendChild(option);
                }
            });
        });


    </script>

    <style>
        .card-hover {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .card-hover:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
        }
        .animated-background {
            background: linear-gradient(270deg, #007bff, #00c6ff);
            background-size: 400% 400%;
            animation: gradientAnimation 8s ease infinite;
        }
        @keyframes gradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
    </style>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('assets/js/admin.js') }}"></script>
{% endblock %}
